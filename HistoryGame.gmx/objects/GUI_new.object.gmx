<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//for topLeft
picked = false;
currentPerson = "None";
tribeInfo = "Choose Tribe";
global.thisGUI = self; // so i can refrence it from another object


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For merging tribes


    
if(picked){//Deciddes if the list needs to be created or not.
create = false;//also desroys others


//find all tribes
num = instance_number(person);
j = 0;// use for radiusdistance_to_point(global.chosenLand.destX,global.chosenLand.destY) == 0
// First, make a list of all instances of the given type
for (var i = 0; i &lt; num; i++ ){
    if((global.onClickPerson != instance_find(person, i))){
   if( point_distance(global.onClickPerson.x, global.onClickPerson.y, instance_find(person, i).x, instance_find(person, i).y) &lt; 32){
    list[j] = instance_find(person, i);
    j++;
    }
    }
    }
    

i = 0;
while(i &lt; j){
h = (64 * i) +  128+256 +64;//the sprites above added together
w = 0;

newPerson = instance_create(w,h,mergeTribe);//creates a spawner for the  
newPerson.mergePerson = list[i];
newPerson.counter = list[i].totalMembers;

i++;
}//loop
create = false;
}//if
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///String for tribe info

//adding up tribe cals


    if(!picked){//for before they select
    
    }else{
    count = global.onClickPerson.totalMembers;
    cal = 0; 
    males = 0;
    females = 0;
   
   for(i = 0; i &lt; count; i++){
   member = global.onClickPerson.tribe[i];
    cal += member.cals;
    if( "male" == member.sex){
        males++;
        }if( "female" == member.sex){
        females++;
        }
}

tribeInfo = "Total Members: " + 
string(count)+
"#Males: " +
string(males) +
"#Females: " +
string(females) +
"#cals: " +
string(cal);

    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///background of gui
draw_sprite(spriteBG_SPR, 0, 0, 0);//background
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cals interface
//on space
draw_sprite(calsOnSpace_spr, 0, 1028 - 64, 128);
draw_set_font(turn_FT);
draw_set_colour(c_blue);
draw_set_halign(fa_left);
textForCals = string(global.chosenCal);

draw_text(1028-94, 182, textForCals);
//for Tribe
draw_sprite(calOnTribe_SPR, 0, 1028 - 64, 256);
textForTribeCals = global.tribeCals;
draw_text(1028-94, 310, textForTribeCals);
//for Tribe

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Phases and turn
draw_set_font(turn_FT);
draw_set_colour(c_blue);
draw_set_halign(fa_left);
draw_sprite(interface1_SPR, 0, 514, 0);//topBar

switch (global.phase)//changes the top phase progress sprite based on the turn
   {
   case 1:
    draw_sprite(interface1_SPR, 0, 514, 0);//topBar
   break;
   case 2:
    draw_sprite(interface2_SPR, 0, 514, 0);//topBar
   break;
   case 3:
    draw_sprite(interface3_SPR, 0, 514, 0);//topBar
   break;
   case 4:
    draw_sprite(interface4_SPR, 0, 514, 0);//topBar
   break;
   case 5:
    global.turn++; //increments the turn
    global.phase = 1;;//resets phase back to phase 1
   break;
   }
//turn-UR. Draws sprite for turn number
draw_sprite(turn_SPR, 0, 1028 - 64, 0);

/////////////button for nextPhase-Br
//The hover creates the blink effect when clicking the button
if point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(), 1028-128, 768-128, 1028, 768)//checks is mouse is over the areaa
{var hover = 1}else{ var hover = 0};
   if(global.phase == 4){
   draw_sprite(endPhase_SPR, hover, 1028 - 64, 768 - 128);//button-BR
   }else{
   draw_sprite(nextPhase_SPR, hover, 1028 - 64, 768 - 128);//button-BR
   }
//This changes the button if you are on phase 4
if(mouse_check_button_pressed(mb_left)) &amp;&amp; (hover = 1){
   if(global.phase == 4){
   draw_sprite(endPhaseH_SPR, 2, 1028 - 64, 768 - 128);//button-BR
   }else{
   draw_sprite(nextPhaseH_SPR, 2, 1028 - 64, 768 - 128);//button-BR
   }
    global.phase++;
    }
 //////////   
 
 
 
 ///toDistRoom
 //The hover creates the blink effect when clicking the button
if point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(), 1028-128, 768-256, 1028, 768-128)//checks is mouse is over the areaa
{var hoverD = 1}else{ var hoverD = 0};
   if(global.phase == 3){
   draw_sprite(distribute_SPR, hoverD, 1028 - 64, 768 - 256);//button-BR
   }else{
   draw_sprite(distribute_SPR2, hoverD, 1028 - 64, 768 - 256);//button-BR
   }
//This changes the button if you are on phase 4
if(mouse_check_button_pressed(mb_left)) &amp;&amp; (hoverD = 1){
   script_execute(toDist_SC);
    }
    
 ///toCards
 //The hover creates the blink effect when clicking the button
if point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(), 1028-128, 768-384, 1028, 768-256)//checks is mouse is over the areaa
{var hoverC = 1}else{ var hoverC = 0};
   if(global.phase == 1){
   draw_sprite(cardRoom_SPR, hoverC, 1028 - 64, 768 - 384);//button-BR
   }else{
   draw_sprite(cardRoom_SPR2, hoverC, 1028 - 64, 768 - 384);//button-BR
   }
//This changes the button if you are on phase 4
if(mouse_check_button_pressed(mb_left)) &amp;&amp; (hoverC = 1){
   room_goto(card_init_room);
    }
   
//need to check mouse release

text = string(global.turn);


draw_text(1028-84, 44, text);

/////////////button for Your Statistics
//The hover creates the blink effect when clicking the button
if point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(), 1028-300, 768-75, 1028-150, 768)//checks is mouse is over the areaa
{var hover = 1}else{ var hover = 0};
   draw_sprite(stats_SPR, hover, 1028 - 230, 768 - 75);//button-BR
   
//This changes the button if clicked
if(mouse_check_button_pressed(mb_left)) &amp;&amp; (hover = 1){
   draw_sprite(statsH_SPR, 2, 1028 - 230, 768 - 75);//button-BR  
   room_goto(rm_stats); 
}
 //////////
 
 /////////////button for returning to Title Screen
//The hover creates the blink effect when clicking the button
if point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(), 1028-920, 768-75, 1028-780, 768)//checks is mouse is over the areaa
{var hover = 1}else{ var hover = 0};
   draw_sprite(returnToTitle_SPR, hover, 1028 - 850, 768 - 75);//button-BR
   
//This changes the button if clicked
if(mouse_check_button_pressed(mb_left)) &amp;&amp; (hover = 1){
   draw_sprite(returnToTitleH_SPR, 2, 1028 - 850, 768 - 75);//button-BR  
   room_goto(rm_title); 
}

 /////////////button for returning to Title Screen
//The hover creates the blink effect when clicking the button

if point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(), 1028-700, 768-75, 1028-625, 768)//checks is mouse is over the areaa
{var hover = 1}else{ var hover = 0};
   if ((global.turn == 2) &amp;&amp; (global.active == 1)){
    draw_sprite(spr_alertACT, hover, 1028 - 700, 768 - 75);//button-BR
   } else {
    draw_sprite(spr_alertINACT, hover, 1028 - 700, 768 - 75);//button-BR
   }
   
//This changes the button if clicked
if(mouse_check_button_pressed(mb_left)) &amp;&amp; (hover = 1) &amp;&amp; (global.turn == 2) &amp;&amp; (global.active == 1){ 
   global.sit = "encounter";
   global.active = 0;
   draw_sprite(spr_alertINACT, hover, 1028 - 700, 768 - 75);//button-BR
   room_goto(rm_dialogue); 
}

 //////////
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///char list
   draw_sprite(characterList_SPR, 0, 0, 0);//topBar
 

    draw_set_font(tribeFT);
    draw_set_colour(c_blue);
   draw_set_halign(fa_left);

draw_sprite(nameplate_SPR, 0, 0, 64 );//topBar

    if(!picked){//for before they select
    draw_text(10, 68  + 10, currentPerson);
    }else{
    draw_text(10, 68  + 10, global.onClickPerson.tribeName);    
    }
 draw_set_font(info_FT);

 draw_sprite(infoForTribe_SPR, 0, 0, 128 );
 
    draw_text(0, 128  + 10, tribeInfo);//Info for tribes
    
 
 
 //mergeable tribes
 draw_sprite(nameplate_SPR, 0, 0, 128+256 ); 
 draw_text(10, 128  + 10+256,"Tribes to#Merge With");
 
 
/////////////button Split Tribe
if point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(), 128, 0, 256, 128)
{var hoverT = 1}else{ var hoverT = 0};
 

    
if(mouse_check_button_pressed(mb_left)) &amp;&amp; (hoverT = 1){  
   draw_sprite(splitTribeH_SPR, hoverT, 129, 0);//splitTribe 
   if(!picked){//for before they select
    //draw_text(10, 68  + 10, currentPerson);
    }else{
    script_execute(splitTribe_SC);   
    }
   
   
   
   
    }else{
    
    draw_sprite(splitTribe_SPR, hoverT,  129, 0);//button-BR
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
